/*

	This CiCode file contains the data exporting AND processing functions.
	We export the 15min. average global radiation, ambient temperature, PV panel temperature and PV panel output power data for the last 30 days.
	We will use the last 3 days to learn the relations between the time and the weather data,
		and the last 30 days to learn the relations between the weather and the output power.
	we will also periodically update these files on a daily basis.
	
	SG.
	
*/

// module variables:
MODULE REAL rDailyData[96];     // array for exporting daily data with 15min frequency

MODULE REAL rGRLesson[96];      // array to store the global radiation weighted data (3 days avg.)
MODULE REAL rATLesson[96];      // array to store the ambient temp. weighted data (3 days avg.)
MODULE REAL rPTLesson[96];      // array to store the pv panel temp. weighted data (3 days avg.)
MODULE REAL rPOLesson[96];      // array to store the pv panel output power. weighted data (30 days avg.)


MODULE STRING sGRfile = "E:\scada_nn\GR_DATA.txt";
MODULE STRING sATfile = "E:\scada_nn\AT_DATA.txt";
MODULE STRING sPTfile = "E:\scada_nn\PT_DATA.txt";
MODULE STRING sPOfile = "E:\scada_nn\PO_DATA.txt";
MODULE STRING sTEMPfile = "E:\scada_nn\_temp.txt";


// functions:
INT FUNCTION _ExportTrendDataIntoTxt(STRING sTrendTagName)
	
	
	//export the daily sTrendTagName data,
	//and put into the sXXFile's  start
	//to do this we will first create an empty _temp.txt file
	//then write into our data into the first 96 lines
	//and then the next (2880-96) = 2784 lines from sXXFile
	//finally, we delete the original sXXFile, and rename the _temp.txt to sXXFile
	
	
	INT iErrorRet = 0; // return value; 0 = OK
	/*
		return values:
		0: export was successful
		1: error, trngettable
		2: error, opening _temp.txt
		3: error, opening sFile
		4: error, bad tag name
	*/
	
	
	INT iError;       // error value for catch the used functions' error codes
	INT iNR_output;   // file number for sTEMPfile
	INT iNR_input;    // file number for sFile
	INT iN;           //loop variable
	STRING sLine;     //line string, to read data from a text file
	STRING sFile;     //use this  filename, to ease our job
	
	
	//getting sFile:
	SELECT CASE sTrendTagName
		CASE "TREND_GLOBALIS_NAPSUGARZAS_PILLANATNYI"
			sFile = sGRfile;
		CASE "TREND_KULSO_HOMERSEKLET_PILLANATNYI"
			sFile = sATfile;
		CASE "TREND_NAPELEM_HOMERSEKLET_PILLANATNYI"
			sFile = sPTfile;
		CASE "TREND_NAPEROMU_P"
			sFile = sPOfile;
		CASE ELSE
			iErrorRet = 4;
			RETURN iErrorRet;
	END SELECT
	
	
	//getting the trend data:
	iError = TrnGetTable(sTrendTagName,0,900,96,rDailyData,258);
	
	// if there is an error, we set iErrorRet and return it:
	IF iError = 0 THEN 
		iErrorRet = 1;
		RETURN iErrorRet;
	END
	
	
	//creating an empty _temp.txt
	ErrSet(1);
		iNR_output = FileOpen(sTEMPfile,"w");
	ErrSet(0);
	
	// if there is an error, we set iErrorRet and return it:
	IF iNR_output = -1 THEN 
		iErrorRet = 2;
		RETURN iErrorRet;
	END
	
	
	//opening sFile:
	ErrSet(1);
		iNR_input = FileOpen(sFile,"r");
	ErrSet(0);
	
	// if there is an error, we set iErrorRet and return it:
	IF iNR_input = -1 THEN 
		iErrorRet = 3;
		RETURN iErrorRet;
	END
	
	
	//writing the data stored in rDailyData to _temp.txt:
	FOR iN = 0 TO 95 DO
		FileWriteLn(iNR_output,rDailyData[iN]:#.####);
	END
	
	
	//writing the data stored in sFile to _temp.txt:
	FOR in = 1 TO 2784 DO
		sLine = FileReadLn(iNR_input);
		FileWriteLn(iNR_output,sLine);
	END
	
	
	//close files:
	FileClose(iNR_input);
	FileClose(iNR_output);
	
	
	//delete sFile, rename tempfile:
	FileDelete(sFile);
	FileRename(sTEMPfile, sFile);
	
	//success:
	RETURN 0; 
	
END



INT FUNCTION _CalculateLessonArray(STRING sType)
	
	
	//we calculate the weighted input data
	//for the learning cycles
	//sType:
	// "GR" : global radiation - last 3 days
	// "AT" : ambient temperature - last 3 days
	// "PT" : pv panel temperature - last 3 days
	// "PO" : output power - last 30 days
	
	
	// WEIGHTS:
	// for the 3-day-average: 60-30-10%
	// for the 30-day-average: elements of a geometric progression, with a=20 and q=0.8
	//  then the sum will be S30 = (a*(q^30-1))/(q-1) = 99.8762.....
	
	
	INT iErrorRet = 0; // return value; 0 = OK
	/*
		return values:
		0: calculate was successful
		1: error, bad sType
		2: error, cannot open sFile
	*/

	
	INT iMaxDays;   //maximum number of days to be processed
	INT iN;         //loop variable
	STRING sFile;   //the file, where the data are stored
	INT iNR_input;  // file number for sFile
	
	
	SELECT CASE sType
		CASE "GR"
			iMaxDays = 3;
			sFile = sGRfile;
		CASE "AT"
			iMaxDays = 3;
			sFile = sATfile;
		CASE "PT"
			iMaxDays = 3;
			sFile = sPTfile;
		CASE "PO"
			iMaxDays = 30;
			sFile = sPOfile;
		CASE ELSE
			iErrorRet = 1;
			RETURN iErrorRet;
	END SELECT
	

	//opening sFile:
	ErrSet(1);
		iNR_input = FileOpen(sFile,"r");
	ErrSet(0);
	
	// if there is an error, we set iErrorRet and return it:
	IF iNR_input = -1 THEN 
		iErrorRet = 2;
		RETURN iErrorRet;
	END


	//counting the weighted averages:
	FOR iN = 1 TO iMaxDays * 96 DO
		
	END
	
	
	//close sFile:
	FileClose(iNR_input);
	
	
	//success:
	RETURN 0;
END
